<?xml version="1.0" encoding="UTF-8" ?>
<configuration >

    <!--定义变量，可以通过${name}使用-->
    <property name="path" value="../logs" />

    <!--ConsoleAppender 用于配置日志的输出，ConsoleAppender是控制台-->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!-- 配置日志格式，这是一个比较通用的格式 -->
            <pattern>%d{HH:mm:ss.SSS} %-5level %logger{35} - %msg%n</pattern>
            <charset>utf-8</charset>
        </encoder>
    </appender>

    <!-- 输出终端是滚动文件 -->
    <appender name="INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 基于时间滚动，就是每天的日志输出到不同的文件 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 输出日志的目录文件名，window中默认分区为当前程序的硬盘分区，%d{yyyy-MM-dd}是当前日期 -->
            <fileNamePattern>${path}/info/info-%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- 最大保存最近30天，超出的历史文件会被删除 -->
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
            <maxHistory>30</maxHistory>
        </rollingPolicy>

        <!-- 按照日志级别进行过滤 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 只收集WARN级别的日志，其他高级别和低级别的日志都放弃 -->
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>

        <encoder>
            <!-- 配置日志格式，这是一个比较通用的格式 -->
            <pattern>%d{HH:mm:ss.SSS} %-5level %logger{35} - %msg%n</pattern>
            <charset>utf-8</charset>
        </encoder>
    </appender>

    <!-- 输出终端是滚动文件 -->
    <appender name="WARN" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 基于时间滚动，就是每天的日志输出到不同的文件 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 输出日志的目录文件名，window中默认分区为当前程序的硬盘分区，%d{yyyy-MM-dd}是当前日期 -->
            <fileNamePattern>${path}/warn/warn-%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- 最大保存最近30天，超出的历史文件会被删除 -->
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
            <maxHistory>30</maxHistory>
        </rollingPolicy>

        <!-- 按照日志级别进行过滤 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 只收集WARN级别的日志，其他高级别和低级别的日志都放弃 -->
            <level>WARN</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>

        <encoder>
            <!-- 配置日志格式，这是一个比较通用的格式 -->
            <pattern>%d{HH:mm:ss.SSS} %-5level %logger{35} - %msg%n</pattern>
            <charset>utf-8</charset>
        </encoder>
    </appender>
    
    <!-- 输出终端是滚动文件 -->
    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 基于时间滚动，就是每天的日志输出到不同的文件 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 输出日志的目录文件名，window中默认分区为当前程序的硬盘分区，%d{yyyy-MM-dd}是当前日期 -->
            <fileNamePattern>${path}/error/error-%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- 最大保存最近30天，超出的历史文件会被删除 -->
            <cleanHistoryOnStart>true</cleanHistoryOnStart>
            <maxHistory>30</maxHistory>
        </rollingPolicy>

        <!-- 按照日志级别进行过滤 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 只收集WARN级别的日志，其他高级别和低级别的日志都放弃 -->
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>

        <encoder>
            <!-- 配置日志格式，这是一个比较通用的格式 -->
            <pattern>%d{HH:mm:ss.SSS} %-5level %logger{35} - %msg%n</pattern>
            <charset>utf-8</charset>
        </encoder>
    </appender>    

    <root level="DEBUG">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="INFO" />
        <appender-ref ref="WARN" />
        <appender-ref ref="ERROR" />
    </root>
</configuration>